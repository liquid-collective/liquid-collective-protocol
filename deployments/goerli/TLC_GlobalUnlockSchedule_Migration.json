{
  "address": "0x745fe1d711A79D1e4B6000189352A2DbeF3a8611",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "i",
          "type": "uint256"
        }
      ],
      "name": "CliffTooLong",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "VestingScheduleNotFound",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "i",
          "type": "uint256"
        }
      ],
      "name": "WrongEnd",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "i",
          "type": "uint256"
        }
      ],
      "name": "WrongUnlockDate",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "migrate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xeaa940e5ef765dc733e850d4ed67de9877f3cea8dbe6108e015ce281c9c1d7f8",
  "receipt": {
    "to": null,
    "from": "0x341C40B94bF2afBFa42573cB78f16Ee15a056238",
    "contractAddress": "0x745fe1d711A79D1e4B6000189352A2DbeF3a8611",
    "transactionIndex": 10,
    "gasUsed": "1070639",
    "logsBloom": "0x
    "blockHash": "0x8374f530dbc3776622be0a851d229804396d5b0c10ceca31cc3ffa728e2f0655",
    "transactionHash": "0xeaa940e5ef765dc733e850d4ed67de9877f3cea8dbe6108e015ce281c9c1d7f8",
    "logs": [],
    "blockNumber": 9813820,
    "cumulativeGasUsed": "1809023",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 2,
  "solcInputHash": "7a7ee2ce31e910a20ebeaa44b02066a2",
  "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"i\",\"type\":\"uint256\"}],\"name\":\"CliffTooLong\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"VestingScheduleNotFound\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"i\",\"type\":\"uint256\"}],\"name\":\"WrongEnd\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"i\",\"type\":\"uint256\"}],\"name\":\"WrongUnlockDate\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"migrate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"VestingScheduleNotFound(uint256)\":[{\"params\":{\"index\":\"vesting schedule index\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"errors\":{\"VestingScheduleNotFound(uint256)\":[{\"notice\":\"The VestingSchedule was not found\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/src/migration/TLC_globalUnlockScheduleMigration.sol\":\"TlcMigration\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10},\"remappings\":[]},\"sources\":{\"contracts/src/migration/TLC_globalUnlockScheduleMigration.sol\":{\"content\":\"//SPDX-License-Identifier: BUSL-1.1\\npragma solidity 0.8.10;\\n\\nimport \\\"../state/tlc/VestingSchedules.2.sol\\\";\\nimport \\\"../state/tlc/IgnoreGlobalUnlockSchedule.sol\\\";\\n\\nstruct VestingScheduleMigration {\\n    // number of consecutive schedules to migrate with the same parameters\\n    uint8 scheduleCount;\\n    // The new lock duration\\n    uint32 newLockDuration;\\n    // if != 0, the new start value\\n    uint64 newStart;\\n    // if != 0, the new end value\\n    uint64 newEnd;\\n    // set cliff to 0 if true\\n    bool setCliff;\\n    // if true set vesting duration to 86400\\n    bool setDuration;\\n    // if true set vesting period duration to 86400\\n    bool setPeriodDuration;\\n    // if true schedule will not be subject to global unlock schedule\\n    bool ignoreGlobalUnlock;\\n}\\n\\nuint256 constant OCTOBER_16_2024 = 1729036800;\\n\\ncontract TlcMigration {\\n    error CliffTooLong(uint256 i);\\n    error WrongUnlockDate(uint256 i);\\n    error WrongEnd(uint256 i);\\n\\n    function migrate() external {\\n        VestingScheduleMigration[] memory migrations = new VestingScheduleMigration[](30);\\n        // 0 -> 6\\n        migrations[0] = VestingScheduleMigration({\\n            scheduleCount: 7,\\n            newStart: 0,\\n            newEnd: 0,\\n            newLockDuration: 75772800,\\n            setCliff: false,\\n            setDuration: false,\\n            setPeriodDuration: false,\\n            ignoreGlobalUnlock: false\\n        });\\n        // 7\\n        migrations[1] = VestingScheduleMigration({\\n            scheduleCount: 1,\\n            newStart: 0,\\n            newEnd: 0,\\n            newLockDuration: 70329600,\\n            setCliff: false,\\n            setDuration: false,\\n            setPeriodDuration: false,\\n            ignoreGlobalUnlock: false\\n        });\\n        // 8\\n        migrations[2] = VestingScheduleMigration({\\n            scheduleCount: 1,\\n            newStart: 0,\\n            newEnd: 0,\\n            newLockDuration: 65491200,\\n            setCliff: false,\\n            setDuration: false,\\n            setPeriodDuration: false,\\n            ignoreGlobalUnlock: false\\n        });\\n        // 9 -> 12\\n        migrations[3] = VestingScheduleMigration({\\n            scheduleCount: 4,\\n            newStart: 0,\\n            newEnd: 1656720000,\\n            newLockDuration: 72403200,\\n            setCliff: true,\\n            setDuration: true,\\n            setPeriodDuration: true,\\n            ignoreGlobalUnlock: false\\n        });\\n        // 13\\n        migrations[4] = VestingScheduleMigration({\\n            scheduleCount: 1,\\n            newStart: 0,\\n            newEnd: 0,\\n            newLockDuration: 67046400,\\n            setCliff: false,\\n            setDuration: false,\\n            setPeriodDuration: false,\\n            ignoreGlobalUnlock: false\\n        });\\n        // 14\\n        migrations[5] = VestingScheduleMigration({\\n            scheduleCount: 1,\\n            newStart: 0,\\n            newEnd: 0,\\n            newLockDuration: 56505600,\\n            setCliff: false,\\n            setDuration: false,\\n            setPeriodDuration: false,\\n            ignoreGlobalUnlock: false\\n        });\\n        // 15\\n        migrations[6] = VestingScheduleMigration({\\n            scheduleCount: 1,\\n            newStart: 0,\\n            newEnd: 0,\\n            newLockDuration: 58233600,\\n            setCliff: false,\\n            setDuration: false,\\n            setPeriodDuration: false,\\n            ignoreGlobalUnlock: false\\n        });\\n        // 16\\n        migrations[7] = VestingScheduleMigration({\\n            scheduleCount: 1,\\n            newStart: 0,\\n            newEnd: 0,\\n            newLockDuration: 57974400,\\n            setCliff: false,\\n            setDuration: false,\\n            setPeriodDuration: false,\\n            ignoreGlobalUnlock: false\\n        });\\n        // 17\\n        migrations[8] = VestingScheduleMigration({\\n            scheduleCount: 1,\\n            newStart: 0,\\n            newEnd: 0,\\n            newLockDuration: 53740800,\\n            setCliff: false,\\n            setDuration: false,\\n            setPeriodDuration: false,\\n            ignoreGlobalUnlock: true\\n        });\\n        // 18\\n        migrations[9] = VestingScheduleMigration({\\n            scheduleCount: 1,\\n            newStart: 0,\\n            newEnd: 0,\\n            newLockDuration: 75772800,\\n            setCliff: false,\\n            setDuration: false,\\n            setPeriodDuration: false,\\n            ignoreGlobalUnlock: false\\n        });\\n        // 19\\n        migrations[10] = VestingScheduleMigration({\\n            scheduleCount: 1,\\n            newStart: 0,\\n            newEnd: 0,\\n            newLockDuration: 49474800,\\n            setCliff: false,\\n            setDuration: false,\\n            setPeriodDuration: false,\\n            ignoreGlobalUnlock: false\\n        });\\n        // 20\\n        migrations[11] = VestingScheduleMigration({\\n            scheduleCount: 1,\\n            newStart: 0,\\n            newEnd: 0,\\n            newLockDuration: 75772800,\\n            setCliff: false,\\n            setDuration: false,\\n            setPeriodDuration: false,\\n            ignoreGlobalUnlock: false\\n        });\\n        // 21\\n        migrations[12] = VestingScheduleMigration({\\n            scheduleCount: 1,\\n            newStart: 0,\\n            newEnd: 0,\\n            newLockDuration: 49474800,\\n            setCliff: false,\\n            setDuration: false,\\n            setPeriodDuration: false,\\n            ignoreGlobalUnlock: false\\n        });\\n        // 22\\n        migrations[13] = VestingScheduleMigration({\\n            scheduleCount: 1,\\n            newStart: 0,\\n            newEnd: 0,\\n            newLockDuration: 75772800,\\n            setCliff: false,\\n            setDuration: false,\\n            setPeriodDuration: false,\\n            ignoreGlobalUnlock: false\\n        });\\n        // 23\\n        migrations[14] = VestingScheduleMigration({\\n            scheduleCount: 1,\\n            newStart: 0,\\n            newEnd: 0,\\n            newLockDuration: 49474800,\\n            setCliff: false,\\n            setDuration: false,\\n            setPeriodDuration: false,\\n            ignoreGlobalUnlock: false\\n        });\\n        // 24 -> 26\\n        migrations[15] = VestingScheduleMigration({\\n            scheduleCount: 3,\\n            newStart: 0,\\n            newEnd: 0,\\n            newLockDuration: 75772800,\\n            setCliff: false,\\n            setDuration: false,\\n            setPeriodDuration: false,\\n            ignoreGlobalUnlock: false\\n        });\\n        // 27\\n        migrations[16] = VestingScheduleMigration({\\n            scheduleCount: 1,\\n            newStart: 0,\\n            newEnd: 0,\\n            newLockDuration: 70329600,\\n            setCliff: false,\\n            setDuration: false,\\n            setPeriodDuration: false,\\n            ignoreGlobalUnlock: false\\n        });\\n        // 28 -> 29\\n        migrations[17] = VestingScheduleMigration({\\n            scheduleCount: 2,\\n            newStart: 0,\\n            newEnd: 0,\\n            newLockDuration: 50371200,\\n            setCliff: false,\\n            setDuration: false,\\n            setPeriodDuration: false,\\n            ignoreGlobalUnlock: false\\n        });\\n        // 30\\n        migrations[18] = VestingScheduleMigration({\\n            scheduleCount: 1,\\n            newStart: 0,\\n            newEnd: 0,\\n            newLockDuration: 50716800,\\n            setCliff: false,\\n            setDuration: false,\\n            setPeriodDuration: false,\\n            ignoreGlobalUnlock: true\\n        });\\n        // 31\\n        migrations[19] = VestingScheduleMigration({\\n            scheduleCount: 1,\\n            newStart: 0,\\n            newEnd: 0,\\n            newLockDuration: 50803200,\\n            setCliff: false,\\n            setDuration: false,\\n            setPeriodDuration: false,\\n            ignoreGlobalUnlock: true\\n        });\\n        // 32\\n        migrations[20] = VestingScheduleMigration({\\n            scheduleCount: 1,\\n            newStart: 0,\\n            newEnd: 0,\\n            newLockDuration: 50889600,\\n            setCliff: false,\\n            setDuration: false,\\n            setPeriodDuration: false,\\n            ignoreGlobalUnlock: true\\n        });\\n        // 33\\n        migrations[21] = VestingScheduleMigration({\\n            scheduleCount: 1,\\n            newStart: 0,\\n            newEnd: 0,\\n            newLockDuration: 50716800,\\n            setCliff: false,\\n            setDuration: false,\\n            setPeriodDuration: false,\\n            ignoreGlobalUnlock: true\\n        });\\n        // 34 -> 35\\n        migrations[22] = VestingScheduleMigration({\\n            scheduleCount: 2,\\n            newStart: 0,\\n            newEnd: 0,\\n            newLockDuration: 50889600,\\n            setCliff: false,\\n            setDuration: false,\\n            setPeriodDuration: false,\\n            ignoreGlobalUnlock: true\\n        });\\n        // 36 -> 60\\n        migrations[23] = VestingScheduleMigration({\\n            scheduleCount: 25,\\n            newStart: 1686175200,\\n            newEnd: 1686261600,\\n            newLockDuration: 42861600,\\n            setCliff: false,\\n            setDuration: true,\\n            setPeriodDuration: true,\\n            ignoreGlobalUnlock: false\\n        });\\n        // 61\\n        migrations[24] = VestingScheduleMigration({\\n            scheduleCount: 1,\\n            newStart: 0,\\n            newEnd: 0,\\n            newLockDuration: 40953600,\\n            setCliff: false,\\n            setDuration: false,\\n            setPeriodDuration: false,\\n            ignoreGlobalUnlock: false\\n        });\\n        // 62\\n        migrations[25] = VestingScheduleMigration({\\n            scheduleCount: 1,\\n            newStart: 0,\\n            newEnd: 0,\\n            newLockDuration: 48729600,\\n            setCliff: false,\\n            setDuration: false,\\n            setPeriodDuration: false,\\n            ignoreGlobalUnlock: false\\n        });\\n        // 63\\n        migrations[26] = VestingScheduleMigration({\\n            scheduleCount: 1,\\n            newStart: 0,\\n            newEnd: 0,\\n            newLockDuration: 41644800,\\n            setCliff: false,\\n            setDuration: false,\\n            setPeriodDuration: false,\\n            ignoreGlobalUnlock: true\\n        });\\n        // 64\\n        migrations[27] = VestingScheduleMigration({\\n            scheduleCount: 1,\\n            newStart: 0,\\n            newEnd: 0,\\n            newLockDuration: 47001600,\\n            setCliff: false,\\n            setDuration: false,\\n            setPeriodDuration: false,\\n            ignoreGlobalUnlock: true\\n        });\\n        // 65\\n        migrations[28] = VestingScheduleMigration({\\n            scheduleCount: 1,\\n            newStart: 0,\\n            newEnd: 0,\\n            newLockDuration: 45014400,\\n            setCliff: false,\\n            setDuration: false,\\n            setPeriodDuration: false,\\n            ignoreGlobalUnlock: true\\n        });\\n        // 66\\n        migrations[29] = VestingScheduleMigration({\\n            scheduleCount: 1,\\n            newStart: 0,\\n            newEnd: 0,\\n            newLockDuration: 38188800,\\n            setCliff: false,\\n            setDuration: false,\\n            setPeriodDuration: false,\\n            ignoreGlobalUnlock: true\\n        });\\n        // All schedules covered\\n\\n        uint256 index = 0;\\n        for (uint256 i = 0; i < migrations.length; i++) {\\n            VestingScheduleMigration memory migration = migrations[i];\\n            for (uint256 j = 0; j < migration.scheduleCount; j++) {\\n                VestingSchedulesV2.VestingSchedule storage sch = VestingSchedulesV2.get(index);\\n\\n                bool isRevoked = false;\\n                if (sch.start + sch.duration != sch.end) {\\n                    isRevoked = true;\\n                }\\n                // Modifications\\n                sch.lockDuration = migration.newLockDuration;\\n                if (migration.newStart != 0) {\\n                    sch.start = migration.newStart;\\n                }\\n                if (migration.newEnd != 0) {\\n                    sch.end = migration.newEnd;\\n                }\\n                if (migration.setCliff) {\\n                    sch.cliffDuration = 0;\\n                }\\n                if (migration.setDuration) {\\n                    sch.duration = 86400;\\n                }\\n                if (migration.setPeriodDuration) {\\n                    sch.periodDuration = 86400;\\n                }\\n                if (migration.ignoreGlobalUnlock) {\\n                    IgnoreGlobalUnlockSchedule.set(index, true);\\n                }\\n\\n                // Post effects checks\\n                // check cliff is not longer than duration\\n                if (sch.cliffDuration > sch.duration) {\\n                    revert CliffTooLong(index);\\n                }\\n                // sanity checks on non revoked schedules\\n                if (!isRevoked && (sch.end != sch.start + sch.duration)) {\\n                    revert WrongEnd(index);\\n                }\\n                // check all the schedules are locked until unix : 1729036800\\n                if (sch.start + sch.lockDuration != OCTOBER_16_2024) {\\n                    revert WrongUnlockDate(index);\\n                }\\n\\n                index += 1;\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf8b0077f739e1a54a6d7e034fdba47bc51b7f5faedacbab0f9dd259f06d0dc3d\",\"license\":\"BUSL-1.1\"},\"contracts/src/state/tlc/IgnoreGlobalUnlockSchedule.sol\":{\"content\":\"//SPDX-License-Identifier: BUSL-1.1\\npragma solidity 0.8.10;\\n\\n/// @title Global unlock schedule activation storage\\n/// @notice Utility to manage the global unlock schedule activation mapping in storage\\n/// @notice The global unlock schedule releases 1/24th of the total scheduled amount every month after the local lock end\\nlibrary IgnoreGlobalUnlockSchedule {\\n    /// @notice Storage slot of the global unlock schedule activation mapping\\n    bytes32 internal constant GLOBAL_UNLOCK_ACTIVATION_SLOT =\\n        bytes32(uint256(keccak256(\\\"tlc.state.globalUnlockScheduleActivation\\\")) - 1);\\n\\n    /// @notice Structure stored in storage slot\\n    struct Slot {\\n        /// @custom:attribute Mapping keeping track of activation per schedule\\n        mapping(uint256 => bool) value;\\n    }\\n\\n    /// @notice Retrieve the global unlock schedule activation value of a schedule, true if the global lock should be ignored\\n    /// @param _scheduleId The schedule id\\n    /// @return The global unlock activation value\\n    function get(uint256 _scheduleId) internal view returns (bool) {\\n        bytes32 slot = GLOBAL_UNLOCK_ACTIVATION_SLOT;\\n\\n        Slot storage r;\\n\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n\\n        return r.value[_scheduleId];\\n    }\\n\\n    /// @notice Sets the global unlock schedule activation value of a schedule\\n    /// @param _scheduleId The id of the schedule to modify\\n    /// @param _ignoreGlobalUnlock The value to set, true if the global lock should be ignored\\n    function set(uint256 _scheduleId, bool _ignoreGlobalUnlock) internal {\\n        bytes32 slot = GLOBAL_UNLOCK_ACTIVATION_SLOT;\\n\\n        Slot storage r;\\n\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n\\n        r.value[_scheduleId] = _ignoreGlobalUnlock;\\n    }\\n}\\n\",\"keccak256\":\"0x5643382132501ff053399511962850a5f19b08c1901f0ecfbcb0e9c4d15996b2\",\"license\":\"BUSL-1.1\"},\"contracts/src/state/tlc/VestingSchedules.1.sol\":{\"content\":\"//SPDX-License-Identifier: BUSL-1.1\\npragma solidity 0.8.10;\\n\\n/// @title VestingSchedulesV1 Storage\\n/// @notice Utility to manage VestingSchedulesV1 in storage\\nlibrary VestingSchedulesV1 {\\n    /// @notice Storage slot of the Vesting Schedules\\n    bytes32 internal constant VESTING_SCHEDULES_SLOT =\\n        bytes32(uint256(keccak256(\\\"erc20VestableVotes.state.schedules\\\")) - 1);\\n\\n    struct VestingSchedule {\\n        // start time of the vesting period\\n        uint64 start;\\n        // date at which the vesting is ended\\n        // initially it is equal to start+duration then to revoke date in case of revoke\\n        uint64 end;\\n        // duration before which first tokens gets ownable\\n        uint32 cliffDuration;\\n        // duration before tokens gets unlocked. can exceed the duration of the vesting chedule\\n        uint32 lockDuration;\\n        // duration of the entire vesting (sum of all vesting period durations)\\n        uint32 duration;\\n        // duration of a single period of vesting\\n        uint32 periodDuration;\\n        // amount of tokens granted by the vesting schedule\\n        uint256 amount;\\n        // creator of the token vesting\\n        address creator;\\n        // beneficiary of tokens after they are releaseVestingScheduled\\n        address beneficiary;\\n        // whether the schedule can be revoked\\n        bool revocable;\\n    }\\n\\n    /// @notice The structure at the storage slot\\n    struct SlotVestingSchedule {\\n        /// @custom:attribute Array containing all the vesting schedules\\n        VestingSchedule[] value;\\n    }\\n\\n    /// @notice The VestingSchedule was not found\\n    /// @param index vesting schedule index\\n    error VestingScheduleNotFound(uint256 index);\\n\\n    /// @notice Retrieve the vesting schedule in storage\\n    /// @param _index index of the vesting schedule\\n    /// @return the vesting schedule\\n    function get(uint256 _index) internal view returns (VestingSchedule storage) {\\n        bytes32 slot = VESTING_SCHEDULES_SLOT;\\n\\n        SlotVestingSchedule storage r;\\n\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n\\n        if (r.value.length <= _index) {\\n            revert VestingScheduleNotFound(_index);\\n        }\\n\\n        return r.value[_index];\\n    }\\n\\n    /// @notice Get vesting schedule count in storage\\n    /// @return The count of vesting schedule in storage\\n    function getCount() internal view returns (uint256) {\\n        bytes32 slot = VESTING_SCHEDULES_SLOT;\\n\\n        SlotVestingSchedule storage r;\\n\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n\\n        return r.value.length;\\n    }\\n\\n    /// @notice Add a new vesting schedule in storage\\n    /// @param _newSchedule new vesting schedule to create\\n    /// @return The size of the vesting schedule array after the operation\\n    function push(VestingSchedule memory _newSchedule) internal returns (uint256) {\\n        bytes32 slot = VESTING_SCHEDULES_SLOT;\\n\\n        SlotVestingSchedule storage r;\\n\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n\\n        r.value.push(_newSchedule);\\n\\n        return r.value.length;\\n    }\\n}\\n\",\"keccak256\":\"0x3fb926f0a0b18da686b3bd612f8a2d32fdcc912d8daab8963551a0583486688a\",\"license\":\"BUSL-1.1\"},\"contracts/src/state/tlc/VestingSchedules.2.sol\":{\"content\":\"//SPDX-License-Identifier: BUSL-1.1\\npragma solidity 0.8.10;\\n\\nimport \\\"./VestingSchedules.1.sol\\\";\\n\\n/// @title VestingSchedulesV2 Storage\\n/// @notice Utility to manage VestingSchedulesV2 in storage\\nlibrary VestingSchedulesV2 {\\n    /// @notice Storage slot of the Vesting Schedules (note the slot is different from v1)\\n    bytes32 internal constant VESTING_SCHEDULES_SLOT =\\n        bytes32(uint256(keccak256(\\\"erc20VestableVotes.state.v2.schedules\\\")) - 1);\\n\\n    struct VestingSchedule {\\n        // start time of the vesting period\\n        uint64 start;\\n        // date at which the vesting is ended\\n        // initially it is equal to start+duration then to revoke date in case of revoke\\n        uint64 end;\\n        // duration before which first tokens gets ownable\\n        uint32 cliffDuration;\\n        // duration before tokens gets unlocked. can exceed the duration of the vesting chedule\\n        uint32 lockDuration;\\n        // duration of the entire vesting (sum of all vesting period durations)\\n        uint32 duration;\\n        // duration of a single period of vesting\\n        uint32 periodDuration;\\n        // amount of tokens granted by the vesting schedule\\n        uint256 amount;\\n        // creator of the token vesting\\n        address creator;\\n        // beneficiary of tokens after they are releaseVestingScheduled\\n        address beneficiary;\\n        // whether the schedule can be revoked\\n        bool revocable;\\n        // amount of released tokens\\n        uint256 releasedAmount;\\n    }\\n\\n    /// @notice The structure at the storage slot\\n    struct SlotVestingSchedule {\\n        /// @custom:attribute Array containing all the vesting schedules\\n        VestingSchedule[] value;\\n    }\\n\\n    /// @notice The VestingSchedule was not found\\n    /// @param index vesting schedule index\\n    error VestingScheduleNotFound(uint256 index);\\n\\n    /// @notice Retrieve the vesting schedule in storage\\n    /// @param _index index of the vesting schedule\\n    /// @return the vesting schedule\\n    function get(uint256 _index) internal view returns (VestingSchedule storage) {\\n        bytes32 slot = VESTING_SCHEDULES_SLOT;\\n\\n        SlotVestingSchedule storage r;\\n\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n\\n        if (r.value.length <= _index) {\\n            revert VestingScheduleNotFound(_index);\\n        }\\n\\n        return r.value[_index];\\n    }\\n\\n    /// @notice Get vesting schedule count in storage\\n    /// @return The count of vesting schedule in storage\\n    function getCount() internal view returns (uint256) {\\n        bytes32 slot = VESTING_SCHEDULES_SLOT;\\n\\n        SlotVestingSchedule storage r;\\n\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n\\n        return r.value.length;\\n    }\\n\\n    /// @notice Add a new vesting schedule in storage\\n    /// @param _newSchedule new vesting schedule to create\\n    /// @return The size of the vesting schedule array after the operation\\n    function push(VestingSchedule memory _newSchedule) internal returns (uint256) {\\n        bytes32 slot = VESTING_SCHEDULES_SLOT;\\n\\n        SlotVestingSchedule storage r;\\n\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n\\n        r.value.push(_newSchedule);\\n\\n        return r.value.length;\\n    }\\n\\n    /// @notice Migrate a VestingSchedule from v1 to v2\\n    /// @notice Takes a VestingSchedule in v1 format in stores it in v2 format\\n    /// @param _index of the schedule in v1 to be migrated\\n    /// @param _releasedAmount The released amount to keep in storage\\n    /// @return The index of the created schedule in v2 format\\n    function migrateVestingScheduleFromV1(uint256 _index, uint256 _releasedAmount) internal returns (uint256) {\\n        VestingSchedulesV1.VestingSchedule memory scheduleV1 = VestingSchedulesV1.get(_index);\\n        VestingSchedulesV2.VestingSchedule memory scheduleV2 = VestingSchedulesV2.VestingSchedule({\\n            start: scheduleV1.start,\\n            end: scheduleV1.end,\\n            lockDuration: scheduleV1.lockDuration,\\n            cliffDuration: scheduleV1.cliffDuration,\\n            duration: scheduleV1.duration,\\n            periodDuration: scheduleV1.periodDuration,\\n            amount: scheduleV1.amount,\\n            creator: scheduleV1.creator,\\n            beneficiary: scheduleV1.beneficiary,\\n            revocable: scheduleV1.revocable,\\n            releasedAmount: _releasedAmount\\n        });\\n\\n        return push(scheduleV2) - 1;\\n    }\\n}\\n\",\"keccak256\":\"0x64de61d739eeb48583f7f446d13cea9c7c27d28943d6492be67c6b8bca08406b\",\"license\":\"BUSL-1.1\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "",
  "devdoc": {
    "errors": {
      "VestingScheduleNotFound(uint256)": [
        {
          "params": {
            "index": "vesting schedule index"
          }
        }
      ]
    },
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "errors": {
      "VestingScheduleNotFound(uint256)": [
        {
          "notice": "The VestingSchedule was not found"
        }
      ]
    },
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}